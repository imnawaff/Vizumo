import SwiftUI
import SpriteKit

struct ContentView: View {
    var scene: SKScene {
        let scene = GameScene()
        scene.size = CGSize(width: 400, height: 600)
        scene.scaleMode = .resizeFill
        return scene
    }

    var body: some View {
        SpriteView(scene: scene)
            .frame(width: 400, height: 600)
            .ignoresSafeArea()
    }
}

class GameScene: SKScene {
    var scoreLabel: SKLabelNode!
    var ball: SKSpriteNode!
    var score = 0

    override func didMove(to view: SKView) {
        backgroundColor = .cyan
        
        scoreLabel = SKLabelNode(fontNamed: "AvenirNext-Bold")
        scoreLabel.fontSize = 36
        scoreLabel.position = CGPoint(x: frame.midX, y: frame.height - 60)
        scoreLabel.text = "Score: 0"
        addChild(scoreLabel)
        
        spawnBall()
    }

    func spawnBall() {
        ball = SKSpriteNode(color: .red, size: CGSize(width: 50, height: 50))
        ball.position = CGPoint(x: CGFloat.random(in: 50...frame.width - 50), y: frame.height + 50)
        addChild(ball)

        let moveDown = SKAction.moveTo(y: -50, duration: 4)
        let remove = SKAction.removeFromParent()
        let sequence = SKAction.sequence([moveDown, remove])
        ball.run(sequence) {
            self.spawnBall()
        }
    }

    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        guard let touch = touches.first else { return }
        let location = touch.location(in: self)

        if ball.contains(location) {
            ball.removeFromParent()
            score += 1
            scoreLabel.text = "Score: \(score)"
            spawnBall()
        }
    }
}